/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;

/**
 *
 * @author Anees Muzzafer Shah
 */
public class NewJFrame extends javax.swing.JFrame
{

    /**
     * Creates new form NewJFrame
     */
    
    
    public int turn = 0 ;
    public int[][] board = new int[3][3];
    public int[][] pboard = new int[3][3];
    public int[][] nextboard = new int[3][3];
    public int moveArray[] = new int[9];
    public int winPlayer, PwinPlayer;
    public int val , addvalue , pturn , currentPlace , score, flag;
    
    
    
    
    public NewJFrame()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLab8 = new javax.swing.JLabel();
        jLab3 = new javax.swing.JLabel();
        jLab1 = new javax.swing.JLabel();
        jLab2 = new javax.swing.JLabel();
        jLab6 = new javax.swing.JLabel();
        jLab4 = new javax.swing.JLabel();
        jLab5 = new javax.swing.JLabel();
        jLab9 = new javax.swing.JLabel();
        jLab7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("tictactoe");
        setBackground(new java.awt.Color(0, 204, 255));
        setPreferredSize(new java.awt.Dimension(600, 500));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLab8.setBackground(new java.awt.Color(255, 102, 102));
        jLab8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab8.setForeground(new java.awt.Color(255, 255, 255));
        jLab8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab8.setText(".");
        jLab8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab8.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab8MouseClicked(evt);
            }
        });

        jLab3.setBackground(new java.awt.Color(255, 102, 102));
        jLab3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab3.setForeground(new java.awt.Color(255, 255, 255));
        jLab3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab3.setText(".");
        jLab3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab3.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab3MouseClicked(evt);
            }
        });

        jLab1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab1.setForeground(new java.awt.Color(255, 255, 255));
        jLab1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab1.setText(".");
        jLab1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab1MouseClicked(evt);
            }
        });

        jLab2.setBackground(new java.awt.Color(255, 102, 102));
        jLab2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab2.setForeground(new java.awt.Color(255, 255, 255));
        jLab2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab2.setText(".");
        jLab2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab2.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab2MouseClicked(evt);
            }
        });

        jLab6.setBackground(new java.awt.Color(255, 102, 102));
        jLab6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab6.setForeground(new java.awt.Color(255, 255, 255));
        jLab6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab6.setText(".");
        jLab6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab6.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab6MouseClicked(evt);
            }
        });

        jLab4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab4.setForeground(new java.awt.Color(255, 255, 255));
        jLab4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab4.setText(".");
        jLab4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab4.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab4MouseClicked(evt);
            }
        });

        jLab5.setBackground(new java.awt.Color(255, 102, 102));
        jLab5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab5.setForeground(new java.awt.Color(255, 255, 255));
        jLab5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab5.setText(".");
        jLab5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab5.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab5MouseClicked(evt);
            }
        });

        jLab9.setBackground(new java.awt.Color(255, 102, 102));
        jLab9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab9.setForeground(new java.awt.Color(255, 255, 255));
        jLab9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab9.setText(".");
        jLab9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab9.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab9MouseClicked(evt);
            }
        });

        jLab7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLab7.setForeground(new java.awt.Color(255, 255, 255));
        jLab7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab7.setText(".");
        jLab7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLab7.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLab7MouseClicked(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLab7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLab8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLab9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLab4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLab5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLab6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLab1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLab2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLab3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(103, 103, 103)
                .addComponent(jButton1)
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLab3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLab2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLab1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLab6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLab4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLab5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLab9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLab7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLab8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(213, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLab1MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab1MouseClicked
    {//GEN-HEADEREND:event_jLab1MouseClicked
        // TODO add your handling code here:
        setLabel(jLab1);
        setBoard(0,0);
        test(false);
        isWin() ;
        /*predictNext();
        for(int o = 0 ; o < 9 ; o++)
             System.out.println("   " + moveArray[o]);*/
        abc();
    }//GEN-LAST:event_jLab1MouseClicked

    private void jLab2MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab2MouseClicked
    {//GEN-HEADEREND:event_jLab2MouseClicked
        // TODO add your handling code here:
        setLabel(jLab2);
        setBoard(0,1);
        test(false);
        isWin() ;
        abc();
    }//GEN-LAST:event_jLab2MouseClicked

    private void jLab3MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab3MouseClicked
    {//GEN-HEADEREND:event_jLab3MouseClicked
        // TODO add your handling code here:
        setLabel(jLab3);
        setBoard(0,2);
        test(false);
        isWin() ;
        abc();
    }//GEN-LAST:event_jLab3MouseClicked

    private void jLab4MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab4MouseClicked
    {//GEN-HEADEREND:event_jLab4MouseClicked
        // TODO add your handling code here:
        setLabel(jLab4);
        setBoard(1,0);
        test(false);
        isWin() ;
        abc();
    }//GEN-LAST:event_jLab4MouseClicked

    private void jLab5MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab5MouseClicked
    {//GEN-HEADEREND:event_jLab5MouseClicked
        // TODO add your handling code here:
        setLabel(jLab5);
        setBoard(1,1);
        test(false);
        isWin() ;
        abc();
    }//GEN-LAST:event_jLab5MouseClicked

    private void jLab6MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab6MouseClicked
    {//GEN-HEADEREND:event_jLab6MouseClicked
        // TODO add your handling code here:
        setLabel(jLab6);
        setBoard(1,2);
        test(false);
        isWin() ;
        abc();
    }//GEN-LAST:event_jLab6MouseClicked

    private void jLab7MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab7MouseClicked
    {//GEN-HEADEREND:event_jLab7MouseClicked
        // TODO add your handling code here:
        setLabel(jLab7);
        setBoard(2,0);
        test(false);
        isWin() ;
        abc();
    }//GEN-LAST:event_jLab7MouseClicked

    private void jLab8MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab8MouseClicked
    {//GEN-HEADEREND:event_jLab8MouseClicked
        // TODO add your handling code here:
        setLabel(jLab8);
        setBoard(2,1);
        test(false);
        isWin() ;
        abc();
    }//GEN-LAST:event_jLab8MouseClicked

    private void jLab9MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLab9MouseClicked
    {//GEN-HEADEREND:event_jLab9MouseClicked
        // TODO add your handling code here:
        setLabel(jLab9);
        setBoard(2,2);
        test(false);
        isWin() ;
        abc();
    }//GEN-LAST:event_jLab9MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        abc();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    public void setLabel(javax.swing.JLabel lab)
    {
        if(turn % 2 == 0)
        {
            lab.setText("X");
        }
        else
        {
            lab.setText("O");
        }
        
    }
    
    public void test(boolean prediction)
    {
        if(prediction == false)
        {
            for (int i = 0; i < 3; i++)
            {
                if (board[i][0] + board[i][1] + board[i][2] == 3)
                {
                    winPlayer = 1;
                } else if (board[i][0] + board[i][1] + board[i][2] == 30)
                {
                    winPlayer = 2;
                }
            }

            for (int i = 0; i < 3; i++)
            {
                if (board[0][i] + board[1][i] + board[2][i] == 3)
                {
                    winPlayer = 1;
                } else if (board[0][i] + board[1][i] + board[2][i] == 30)
                {
                    winPlayer = 2;
                }
            }
            
            if(board[0][0] + board[1][1] + board[2][2] == 3)
            {
                winPlayer = 1;
            }
            else if(board[0][0] + board[1][1] + board[2][2] == 30)
            {
                winPlayer = 2;
            }
            
            if(board[0][2] + board[1][1] + board[2][0] == 3)
            {
                winPlayer = 1;
            }
            else if(board[0][2] + board[1][1] + board[2][0] == 30)
            {
                winPlayer = 2;
            }
        }
        
        
        else if(prediction == true)
        {
            for (int i = 0; i < 3; i++)
            {
                if (pboard[i][0] + pboard[i][1] + pboard[i][2] == 3)
                {
                    PwinPlayer = 1;
                } else if (pboard[i][0] + pboard[i][1] + pboard[i][2] == 30)
                {
                    PwinPlayer = 2;
                }
            }

            for (int i = 0; i < 3; i++)
            {
                if (pboard[0][i] + pboard[1][i] + pboard[2][i] == 3)
                {
                    PwinPlayer = 1;
                } else if (pboard[0][i] + pboard[1][i] + pboard[2][i] == 30)
                {
                    PwinPlayer = 2;
                }
            }
            
            if(pboard[0][0] + pboard[1][1] + pboard[2][2] == 3)
            {
                PwinPlayer = 1;
            }
            else if(pboard[0][0] + pboard[1][1] + pboard[2][2] == 30)
            {
                PwinPlayer = 2;
            }
            
            if(pboard[0][2] + pboard[1][1] + pboard[2][0] == 3)
            {
                PwinPlayer = 1;
            }
            else if(pboard[0][2] + pboard[1][1] + pboard[2][0] == 30)
            {
                PwinPlayer = 2;
            }
        }
    }
    
    public void isWin()
    {
        if(winPlayer == 1)
        {
            System.out.println("Player 1 wins");
        }
        else if(winPlayer == 2)
        {
            System.out.println("Player 2 wins");
        }
    }
    
    public void setBoard(int i , int j)
    {
        if(turn % 2 == 0)
        {
            board[i][j] = 1 ;
        }
        else
        {
            board[i][j] = 10 ;
        }
        //System.out.println("turn = " + turn + "   board[" + i + "][" + j + "] = " + board[i][j]);
        turn++;
    }
    
    public void predictNext()
    {
        pturn = turn ;
        flag = 0 ;
       // System.out.println("pturn " + pturn);
        score = 0 ;
        PwinPlayer = 0 ;
        for(int x = 0; x < 3; x++)
        {
            for(int y = 0 ; y < 3 ; y++)
            {
                pboard[x][y] = board[x][y];
            }
        }
        for(int x = 0; x < 3; x++)
        {
            for(int y = 0 ; y < 3 ; y++)
            {
                if (pboard[x][y] == 0)
                {
                    if (pturn % 2 == 0)
                    {
                        pboard[x][y] = 1;
                        pturn++;
                    } else
                    {
                        pboard[x][y] = 10;
                        pturn++;
                    }
                   /* System.out.println("hogaya " + x + " " + y + "  " + score );
                    for(int u = 0 ; u < 3; u++)
                    {
                        for(int v = 0 ; v < 3; v++)
                        {
                            System.out.print(pboard[u][v] + "  ");
                        }
                        System.out.println();
                    }*/
                    iteratePredictions();
                    setMoveArray(x,y,score);
                    score = 0 ;
                    pboard[x][y] = 0;
                  /*  System.out.println("nahihogaya " + x + " " + y + "  " + score );
                    for(int u = 0 ; u < 3; u++)
                    {
                        for(int v = 0 ; v < 3; v++)
                        {
                            System.out.print(pboard[u][v] + "  ");
                        }
                        System.out.println();
                    }*/
                    pturn--;
                }
            }
        }
    }
    
    
    public void iteratePredictions()
    {
        /*if(flag  >=3)
            return ;*/
        if(pturn >= 9)
        {
          //  System.out.println("Returnd due to pturn over");
            return;
        }
        
        int x , y ;
        
        test(true);
        PisWin();
        if (PwinPlayer > 0)
        {
          //  System.out.println("this is first class return " + pturn);
            PwinPlayer = 0;
           // pboard[x][y] = 0;
           // pturn--;
            return;
        }
        for (x = 0; x < 3; x++)
        {
            for (y = 0; y < 3; y++)
            {
                if (pboard[x][y] == 0)
                {
                    if (pturn % 2 == 0)
                    {
                        pboard[x][y] = 1;
                        pturn++;
                    } else
                    {
                        pboard[x][y] = 10;
                        pturn++;
                    }
                   // flag++;
                   /* System.out.println("andar " + x + " " + y + "  " + score);
                    for(int u = 0 ; u < 3; u++)
                    {
                        for(int v = 0 ; v < 3; v++)
                        {
                            System.out.print(pboard[u][v] + "  ");
                        }
                        System.out.println();
                    }*/
                    test(true);
                    PisWin();
                    if(PwinPlayer > 0)
                    {
                       // System.out.println("Returnd due to win in pturn " + pturn);
                        PwinPlayer = 0 ;
                        pboard[x][y] = 0 ;
                        pturn-- ;
                        flag = 1 ;
                        return ;
                    }
                    
                    iteratePredictions();
                    
                       pboard[x][y] = 0 ;
                       pturn-- ; 
                  //  System.out.println("bahar " + x + " " + y + "  " + score);
                /*    for(int u = 0 ; u < 3; u++)
                    {
                        for(int v = 0 ; v < 3; v++)
                        {
                            System.out.print(pboard[u][v] + "  ");
                        }
                        System.out.println();
                    }*/
                }
            }
        }
    }
    
    public void setMoveArray(int p, int q , int pscore)
    {
        int c = p*10 + q ;
        int index = 0 ;
        switch (c)
        {
            case 0:
                index = 0;
                break;
            case 1:
                index = 1;
                break;
            case 2:
                index = 2;
                break;
            case 10:
                index = 3;
                break;
            case 11:
                index = 4;
                break;
            case 12:
                index = 5;
                break;
            case 20:
                index = 6;
                break;
            case 21:
                index = 7;
                break;
            case 22:
                index = 8;
                break;
            default:
        }
        moveArray[index] = score ;
    }

   /* public int nextMove()
    {
        int nextMove , pturn = turn ; 
        int remainingTurn = 9 - pturn ; ;
        int score ;
        score = getMove(remainingTurn);
        return score ;
    }
    
    public int getMove(int x)
    {
        if(x == 0)
        {
            return val ;
        }
        else
        {
           for(int i = 0 ; i < 2 ; i++)
           {
               for(int j = 0 ; j < 2 ; j++)
               {
                   if(board[i][j] == 0 && (pturn-1)%2 != 0)
                   {
                       board[i][j] = 10 ;
                       System.out.println("prediction = " + pturn);
                       pturn++;
                       test(true);
                       addvalue = PisWin();
                       val = addvalue + getMove(x - 1) ;
                       return val ;
                   }
                   else if(board[i][j] == 0 && (pturn-1)%2 == 0)
                   {
                       board[i][j] = 1 ;
                       System.out.println("prediction = " + pturn);
                       pturn++;
                       test(true);
                       addvalue = PisWin();
                       val = addvalue + getMove(x - 1) ;
                       return val ;
                   }
                   else
                   {
                       return 0 ;
                   }
               }
           }
           return 0 ;
        }
    }*/
    
    public void PisWin()
    {
        if(PwinPlayer == 1)
        {
            if(pturn%2 == 0)
            {
               // score++;
                 score = (int) (score + Math.pow(2,(10-pturn)));
            }
            else
            //score = score - 1 ;*/
            score = (int) (score - Math.pow(2,(10-pturn)));
            //System.out.println("winplayer = " + PwinPlayer);
            //PwinPlayer = 0 ;
        }
        else if(PwinPlayer == 2)
        {
            if(pturn%2 == 0)
              //  score = score + 1 ;
                 score = (int) (score + Math.pow(2,(10-pturn)));
            else
               // score--;*/
             score = (int) (score - Math.pow(2,(10-pturn)));
           // System.out.println("winplayer = " + PwinPlayer);
            //PwinPlayer = 0 ;
        }
    }
    
    public void abc()
    {
        for(int l = 0 ; l < 9 ; l++)
        {
            moveArray[l] = -10000 ;
        }
        predictNext();
        for(int o = 0 ; o < 9 ; o++)
             System.out.println("   " + moveArray[o]);
        doMove();
    }
    
    public void doMove()
    {
        int point = 0  ;
        int max = -20000;
        for(int cn = 0 ; cn < 9 ; cn++)
        {
            if(max < moveArray[cn])
            {
                max = moveArray[cn];
                point = cn ;
                System.out.println(point);
            }
        }
        int q = 0 , w = 0 ;
        javax.swing.JLabel label = jLab1 ; ;
        switch(point)
        {
            case 0:
                q = 0;
                w = 0;
                label = jLab1 ;
                break;
            case 1:
                q = 0;
                w = 1;
                label = jLab2 ;
                break;
            case 2:
                q = 0;
                w = 2;
                label = jLab3 ;
                break;
            case 3:
                q = 1;
                w = 0;
                label = jLab4 ;
                break;
            case 4:
                q = 1;
                w = 1;
                label = jLab5 ;
                break;
            case 5:
                q = 1;
                w = 2;
                label = jLab6 ;
                break;
            case 6:
                q = 2;
                w = 0;
                label = jLab7 ;
                break;
            case 7:
                q = 2;
                w = 1;
                label = jLab8 ;
                break;
            case 8:
                q = 2;
                w = 2;
                label = jLab9 ;
                break;
        }
        setLabel(label);
        setBoard(q,w);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLab1;
    private javax.swing.JLabel jLab2;
    private javax.swing.JLabel jLab3;
    private javax.swing.JLabel jLab4;
    private javax.swing.JLabel jLab5;
    private javax.swing.JLabel jLab6;
    private javax.swing.JLabel jLab7;
    private javax.swing.JLabel jLab8;
    private javax.swing.JLabel jLab9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
